<ui:composition
xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:z="http://www.qualcomm.com/jsf/core"
	xmlns:c="http://java.sun.com/jstl/core"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:a="http://richfaces.org/a4j"
	xmlns:cats="http://www.ithaka.org/cats"
	xmlns:s="http://jboss.com/products/seam/taglib"
      xmlns:dui="http://openorganize.com/platform/dui"
>

	<h2><h:outputText value="#{invitaionsBulkOperations.bulkTitle}" /></h2>
	
		<div id="step1">
		<ul class="steps">
				<li class="disabled">1. Permissions</li>
				<li class="selected">2. Change</li>
				<li class="disabled">3. Additional</li>
				<li class="disabled">4. Results</li>
		</ul>
			
		
		<div class="cluster smart">

		<p>Enter the new value to apply to all the eligible records you
		selected.</p>

<s:fragment rendered="#{invitaionsBulkOperations.bulkRequiredProperties.contains('catOnHold')}">
<s:decorate id="catOnHold_div" template="../layout/edit.xhtml">
<ui:define name="label">On Hold</ui:define>
<h:selectOneMenu name="catOnHold" value="#{invitaionsBulkOperations.bulkInstance.catOnHold}"
              requiredMessage="Please make a selection !!" 
              required="true">
			   		<s:selectItems value="#{listsForEnums.yesNo}" var="i" itemValue="#{i.value}"
			                 label="#{i.label}" noSelectionLabel="Choose..." />
			    </h:selectOneMenu>
</s:decorate>
</s:fragment>

<s:fragment rendered="#{invitaionsBulkOperations.bulkRequiredProperties.contains('catLifecycle')}">
<s:decorate id="catLifecycle_div" template="../layout/edit.xhtml">
<ui:define name="label">Lifecycle</ui:define>
<h:selectOneMenu name="catLifecycle" value="#{invitaionsBulkOperations.bulkInstance.catLifecycle}"
              requiredMessage="Please make a selection !!" 
              required="true">
		   		<s:selectItems value="#{invitaionsBulkOperations.getPossibleLifecycleAdvancementValues()}" var="i" itemValue="#{i}"
		                 label="#{i.label}" noSelectionLabel="Choose..." />
		       </h:selectOneMenu>
</s:decorate>
</s:fragment>

<s:fragment rendered="#{invitaionsBulkOperations.bulkRequiredProperties.contains('catNegotiator')}">
<s:decorate id="catNegotiator_div" template="../layout/edit.xhtml">
<ui:define name="label">Negotiator</ui:define>
     <h:selectOneMenu id="catNegotiator" value="#{invitaionsBulkOperations.bulkInstance.catNegotiator}"
              requiredMessage="Please make a selection !!" 
              required="true">
	    <s:selectItems value="#{invitaionsBulkOperations.getNegotiatorsList()}" var="i" itemValue="#{i}"
                label="#{i}" noSelectionLabel="Choose..." />
     </h:selectOneMenu>
</s:decorate>
</s:fragment>

<s:fragment rendered="#{invitaionsBulkOperations.bulkRequiredProperties.contains('catParticipationLikelihood')}">
<s:decorate id="catParticipationLikelihood_div" template="../layout/edit.xhtml">
<ui:define name="label">Participation</ui:define>
<h:selectOneMenu name="catParticipationLikelihood" value="#{invitaionsBulkOperations.bulkInstance.catParticipationLikelihood}"
              requiredMessage="Please make a selection !!" 
              required="true">
		   		<s:selectItems value="#{listsForEnums.catInvitations_ParticipationLikelihood}" var="i" itemValue="#{i}"
		                 label="#{i.label}" noSelectionLabel="Choose..." />
		       </h:selectOneMenu>
</s:decorate>
</s:fragment>

			</div>

		<div class="push"></div>

<a:commandLink styleClass="button" value="Quit"
			eventsQueue="#{divParam}eventsQueue"
         	status="globalWaitStatus" ignoreDupResponses="true"
			reRender="invwizard" oncomplete="#{rich:component('invbulkUpdateQuit')}.show(); return false;">
			</a:commandLink> 

			<a:commandLink
			styleClass="button right" value="Continue"
			eventsQueue="#{divParam}eventsQueue"
         	status="globalWaitStatus" ignoreDupResponses="true"
			action="#{invitaionsBulkOperations.bulkNext}" 
			reRender="invwizard" />
			</div>
	
</ui:composition>

