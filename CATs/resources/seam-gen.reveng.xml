<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-reverse-engineering SYSTEM "http://hibernate.sourceforge.net/hibernate-reverse-engineering-3.0.dtd" >
<hibernate-reverse-engineering>
	<type-mapping>
		<sql-type jdbc-type="OTHER" hibernate-type="java.util.Date"></sql-type>
		<sql-type jdbc-type="DECIMAL" hibernate-type="integer" precision="6"></sql-type>
		<sql-type jdbc-type="DECIMAL" hibernate-type="integer" precision="4"></sql-type>
		<sql-type jdbc-type="DECIMAL" hibernate-type="integer" precision="3"></sql-type>
		<sql-type jdbc-type="DECIMAL" hibernate-type="integer" precision="10"></sql-type>
		<sql-type hibernate-type="yes_no" jdbc-type="CHAR" length="1"></sql-type>
	</type-mapping>
	
   <!-- Use this file to customize the generation of JPA entities from database
	    tables performed either by `seam generate' or the Generate Entities task
	    in JBoss Tools. You can find detailed instructions on controlling
	    reverse engineering in the JBoss Tools reference documentation:
	    http://docs.jboss.org/tools/3.0.0.Beta1/en/hibernatetools/html/index.html
   -->

   <!-- Uncomment the next line if you want to begin by excluding all tables,
       then selectively including tables -->
   <!--<table-filter match-name="*.*" exclude="true"/>-->

   <!-- Uncomment one of the next two lines to include or exclude a single table -->
   <!--<table-filter match-name="TABLE_NAME" exclude="true"/>-->
   <!--<table-filter match-name="TABLE_NAME" exclude="false"/>-->

   <!-- An example of a mapping customization -->
   <!--
   <table name="TABLE_PREFIX_BILL" class="org.example.model.Bill">
      <meta attribute="class-code">
// Code appended to the end of the generated class
public float calculateTotal() {
    return this.rate * this.hours;
}
      </meta/>
      <column name="BILL_ID" property="id" type="java.lang.Long"/>
      <column name="RTE" property="rate"/>
      <column name="HRS" property="hours"/>
   </table>
   -->

</hibernate-reverse-engineering>
